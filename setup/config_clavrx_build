###############################################
# Get the current install location
if [ -L $BASH_SOURCE ]; then
    linkpath=`readlink $BASH_SOURCE`
    # Used in qsub.py
    export GEOIPS_RCFILE=$linkpath
    CURRENT_CONFIGPATH=`dirname $linkpath`
    export GEOIPS_VERS=`git -C $CURRENT_CONFIGPATH/.. tag | grep -v osr | tail -n 1`
else
    CURRENT_CONFIGPATH="$( cd "$( dirname "${BASH_SOURCE[0]}")" && pwd)"
    # Used in qsub.py
    export GEOIPS_RCFILE=$CURRENT_CONFIGPATH/"$(basename "${BASH_SOURCE[0]}")"
    # Sort geoips tags by creator date to grab the latest version
    export GEOIPS_VERS=`git -C $CURRENT_CONFIGPATH/.. tag --sort=-creatordate | grep -v osr | head -n 1`
fi

export GEOIPS_BASE=`dirname $CURRENT_CONFIGPATH`
export GEOIPS_BASE=`dirname $GEOIPS_BASE`
export GEOIPS_BASE=`dirname $GEOIPS_BASE`
# clavrx specific setup, bonobo1 tested - modify these if needed

###############################################
# Set the GeoIPS required env vars (based on install location)
export GEOIPS_MODIFIED_BRANCH=dev
export GEOIPS_PACKAGES_DIR=$GEOIPS_BASE/geoips_packages
export GEOIPS_TESTDATA_DIR=$GEOIPS_BASE/test_data
export GEOIPS_DEPENDENCIES_DIR=$GEOIPS_BASE/geoips_dependencies
export GEOIPS_ACTIVE_BRANCH=dev
export GEOIPS_OUTDIRS=$GEOIPS_BASE/geoips_outdirs

###############################################
# Initialize existing conda
if [[ -z $GEOIPS_DEPENDENCIES_DIR ]]; then
    GEOIPS_CONDA_DIR=$GEOIPS_PACKAGES_DIR/../geoips_dependencies/miniconda3
else
    GEOIPS_CONDA_DIR=$GEOIPS_DEPENDENCIES_DIR/miniconda3
fi

if [[ -f $GEOIPS_CONDA_DIR/bin/conda ]]; then
    # >>> conda initialize >>>
    # !! Contents within this block are managed by 'conda init' !!
    __conda_setup=`$GEOIPS_CONDA_DIR/bin/conda 'shell.bash' 'hook'`
    if [ $? -eq 0 ]; then
        eval "$__conda_setup"
    else
        if [ -f "$GEOIPS_CONDA_DIR/etc/profile.d/conda.sh" ]; then
            . "$GEOIPS_CONDA_DIR/etc/profile.d/conda.sh"
        else
            export PATH="$GEOIPS_DEPENDENCIES_DIR/miniconda3/bin:$PATH"
        fi
    fi
    unset __conda_setup
    # <<< conda initialize <<<
fi

###############################################
# Switch to clavrx_build conda env (once it exists)
whichconda=`which conda 2> /dev/null`
if [[ "$whichconda" != "" ]]; then
    if conda env list | grep -q --regex '^clavrx_build'; then
        eval "$(conda shell.bash activate clavrx_build)"
    fi
fi
